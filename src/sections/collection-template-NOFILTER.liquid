{%- assign per_row = section.settings.per_row -%}
{% assign paginate_by = per_row | times: 12 %}
{% if section.settings.collection_tags_style == 'inline' and collection.all_tags.size > 0 %}
  {% assign paginate_by = paginate_by | minus: 1 %}
{% endif %}

{% paginate collection.products by paginate_by %}

<div id="CollectionSection" data-section-id="{{ section.id }}" data-section-type="collection-template">
  {% if section.settings.collection_image_enable and collection.image %}
    <div class="collection-hero loading--delayed" data-preload="{{ collection.image | img_url: '1800x' }}">
      <style>
        .collection-hero__image {
          background-image: url("{{ collection.image | img_url: '1800x' }}");
           
        }
      </style>

      <div class="collection-hero__image"></div>

      <div class="collection-hero__content">
        <div class="page-width">
          <header class="section-header section-header--hero">
            <h1 class="section-header__title section-header__title--medium">
              <div class="animation-cropper">
                <div class="bc-sf-filter-collection-header animation-contents">
                  {{ collection.title }}
                </div>
              </div>
            </h1>
          </header>
        </div>
      </div>

    </div>
  {% endif %}

      <div class="page-width page-content" >

      <!--  {% include 'breadcrumbs' %} -->

        {% unless section.settings.collection_image_enable and collection.image %}
          <header class="section-header">
            <h1 class="bc-sf-filter-collection-header section-header__title">
              {{ collection.title }}
            </h1>
          </header>
        {% endunless %}


           

           

           

        {% if collection.description != blank %}
          <div class="rte" class="bc-sf-filter-collection-description">
            {{ collection.description }}
          </div>
          <hr class="hr--clear hr--small">
        {% endif %}

        <div id="bc-sf-filter-wrapper" class="grid grid--uniform">
          {% assign grid_item_width = 'small--one-half medium-up--one-third' %}

          {% case per_row %}
          {% when 1 %}
            {%- assign grid_item_width = '' -%}
          {% when 2 %}
            {%- assign grid_item_width = 'medium-up--one-half' -%}
          {% when 3 %}
            {%- assign grid_item_width = 'small--one-half medium-up--one-third' -%}
          {% when 4 %}
            {%- assign grid_item_width = 'small--one-half medium-up--one-quarter' -%}
          {% when 5 %}
            {%- assign grid_item_width = 'small--one-half medium-up--one-fifth' -%}
          {% endcase %}

         
			
          <div id="bc-sf-filter-products">
          {% for product in collection.products %}
            {% include 'product-grid-item' %}
          {% endfor %}
          </div>

        </div>

        <div id="bc-sf-filter-bottom-pagination" class="pagination"></div>
        <div id="bc-sf-filter-load-more"></div>

      </div>
		
      {% comment %}
      {% if settings.quick_shop_enable %}
        {% for product in collection.products  %}
          {% include 'quick-shop-modal' %}
        {% endfor %}
      {% endif %}
      {% endcomment %}
    </div>
  </div>
</div>

{% endpaginate %}
<script>
  // Declare bcSfFilterConfig variable
  var bcSfFilterConfig = {
    label: {
      refine: "{{ 'product_filter_search.refine' | t }}",
      refine_mobile: "{{ 'product_filter_search.refine_mobile' | t }}",
      clear: "{{ 'product_filter_search.clear' | t }}",
      clear_all: "{{ 'product_filter_search.clear_all' | t }}",
      apply: "{{ 'product_filter_search.apply' | t }}",
      breadcrumb_home: {% if product_filter_search.breadcrumb_home != blank %} {{ 'product_filter_search.breadcrumb_home' | t }}" {% else %} "Home" {% endif %},
      load_more: {% assign temp = 'product_filter_search.load_more' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Load more Products" {% endunless %},
      show_limit: {% assign temp = 'product_filter_search.show_limit' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Show" {% endunless %},
      sorting: {% assign temp = 'collections.sorting.title' | t  %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Sorting" {% endunless %},
      sorting_best_selling: {% assign temp = 'collections.sorting.best_selling' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Best Selling" {% endunless %},
      sorting_featured: {% assign temp = 'collections.sorting.featured' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Featured" {% endunless %},
      sorting_title_ascending: {% assign temp = 'collections.sorting.az' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Alphabetically, A-Z" {% endunless %},
      sorting_title_descending: {% assign temp = 'collections.sorting.za' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Alphabetically, Z-A" {% endunless %},
      sorting_price_ascending: {% assign temp = 'collections.sorting.price_ascending' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Lowest Price" {% endunless %},
      sorting_price_descending: {% assign temp = 'collections.sorting.price_descending' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Highest Price" {% endunless %},
      sorting_date_ascending: {% assign temp = 'collections.sorting.date_ascending' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Date, Old to New" {% endunless %},
      sorting_date_descending: {% assign temp = 'collections.sorting.date_descending' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Date, New to Old" {% endunless %},
      sorting_sale_descending: {% assign temp = 'collections.sorting.sale_descending' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "% Off" {% endunless %},
      sorting_relevance: {% assign temp = 'collections.sorting.relevance' | t %} {% unless temp contains 'translation missing'  %} "{{ temp }}" {% else %} "Relevance" {% endunless %},
      
      sold_out: "{{ 'products.product.sold_out' | t }}",
      save_html: "{{ 'products.general.save_html' | t }}",
      regular_price: "{{ 'products.general.regular_price' | t }}",
      sale_price: "{{ 'products.general.sale_price' | t }}",
      from_text_html: "{{ 'products.general.from_text_html' | t }}",
      quick_shop: "{{ settings.quick_shop_text }}",
    },
    custom: {
      products_per_page: {{ paginate_by }},
      products_per_row: {{ per_row }},
      grid_item_width: "{{ grid_item_width }}",
      vendor_enable: {{ settings.vendor_enable }},
      quick_shop_enable: {{ settings.quick_shop_enable }},
      product_hover_image: {{ settings.product_hover_image }},
      bc_filter_logo: "{{ settings.bc_filter_logo | img_url: '50x50'}}",      
      bc_filter_info_image: "<img alt='Olavier' src='{{ settings.bc_filter_info_image | img_url: ''}}' />",
      bc_filter_info_image_mobile: "<img alt='Olavier' src='{{ settings.bc_filter_info_image_mobile | img_url: ''}}' />",      
      bc_filter_medium_swatch_list: [{{ settings.bc_filter_medium_swatch_list }}],
      bc_filter_large_swatch_list: [{{ settings.bc_filter_large_swatch_list }}],
      bc_filter_custom_swatch_list: [{{ settings.bc_filter_custom_swatch_list }}]
    }
  };
</script>
{% schema %}
  {
    "name": "Collection pages",
    "settings": [
      {
        "type": "range",
        "id": "per_row",
        "label": "Products per row",
        "default": 4,
        "min": 1,
        "max": 5,
        "step": 1
      },
      {
        "type": "checkbox",
        "id": "collection_image_enable",
        "label": "Show collection image",
        "default": true
      },
      {
        "type": "select",
        "id": "collection_tags_style",
        "label": "Tag filter style",
        "default": "inline",
        "options": [
          {
            "value": "none",
            "label": "No filter"
          },
          {
            "value": "inline",
            "label": "Inline"
          },
          {
            "value": "dropdown",
            "label": "Dropdown"
          }
        ]
      },
      {
        "type": "checkbox",
        "id": "collection_sort_enable",
        "label": "Show sort options",
        "default": false
      }
    ]
  }
{% endschema %}
